8c8
< typedef long long i64;
---
@@ We tell VST that long long
@@ are aligned on 8 bytes.
> typedef long long i64
> __attribute__((aligned(8)));
277,281c277,279
<   FOR(i,16) {
<     o[i]+=(1LL<<16);
<     c=o[i]>>16;
<     o[(i+1)*(i<15)]+=c-1+37*(c-1)*(i==15);
<     o[i]-=c<<16;
---
@@ We separate the loop iteration:
@@ 0-14 and 15 as the last.
@@ also simplify the carry propagation code.
>   FOR(i,15) {
>     o[(i+1)]+=o[i]>>16;
>     o[i]&=0xffff;
282a281,282
>   o[0]+=38*(o[15]>>16);
>   o[15]&=0xffff;
285c285
@@ b is a mask of 64 bits.
< sv sel25519(gf p,gf q,int b)
---
> sv sel25519(gf p,gf q,i64 b)
287c287,288
<   i64 t,i,c=~(b-1);
---
@@ For-loop indexes have to be int.
>   int i;
>   i64 t,c=~(b-1);
297,299c298,301
<   int i,j,b;
<   gf m,t;
<   FOR(i,16) t[i]=n[i];
---
@@ For-loop indexes have to be int.
@@ b is a 64 bit mask.
@@ Initialize m to simplify verification.
>   int i,j;
>   i64 b;
>   gf t,m={0};
>   set25519(t,n);
310d311
<     b=(m[15]>>16)&1;
312c313,314
<     sel25519(t,m,1-b);
---
@@ Computations in arguments
@@ are not allowed in VST.
>     b=1-(m[15]>>16)&1;
>     sel25519(t,m,b);
332c334
<   return d[0]&1;
---
@@ Force the casting.
>   return d[0]&(u8)1;
356,359c358,365
<   i64 i,j,t[31];
<   FOR(i,31) t[i]=0;
<   FOR(i,16) FOR(j,16) t[i+j]+=a[i]*b[j];
<   FOR(i,15) t[i]+=38*t[i+16];
---
@@ For-loop indexes have to be int.
>   int i,j;
>   i64 t[31], aux;
>   FOR(i,31) t[i]= 0;
>   FOR(i,16) {
@@ introduce an auxiliary variable to
@@ simplify verification (loop invariants).
>     aux = a[i];
>     FOR(j,16) t[i+j]+=aux*b[j];
>   }
>   FOR(i,15) t[i]+=(i64)38*t[i+16];
374c380
<   FOR(a,16) c[a]=i[a];
---
@@ gain 5 bytes.
>   set25519(c,i);
397,398c403,405
<   i64 x[80],r,i;
<   gf a,b,c,d,e,f;
---
@@ x only needs gf.
@@ For-loop indexes have to be int.
>   i64 r;
>   int i;
>   gf x,a,b,c,d,e,f;
433,441c440,442
<   FOR(i,16) {
<     x[i+16]=a[i];
<     x[i+32]=c[i];
<     x[i+48]=b[i];
<     x[i+64]=d[i];
<   }
<   inv25519(x+32,x+32);
<   M(x+16,x+16,x+32);
<   pack25519(q,x+16);
---
@@ simplify
>   inv25519(c,c);
>   M(a,a,c);
>   pack25519(q,a);
